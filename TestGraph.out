==23018== Memcheck, a memory error detector
==23018== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==23018== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==23018== Command: ./TestGraph
==23018== 
Running main() from gtest_main.cc
[==========] Running 50 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 25 tests from TestGraph/0, where TypeParam = boost::adjacency_list<boost::setS, boost::vecS, boost::directedS, boost::no_property, boost::no_property, boost::no_property, boost::listS>
[ RUN      ] TestGraph/0.add_vertex_1
[       OK ] TestGraph/0.add_vertex_1 (34 ms)
[ RUN      ] TestGraph/0.num_vertex_1
[       OK ] TestGraph/0.num_vertex_1 (6 ms)
[ RUN      ] TestGraph/0.vertex_1
[       OK ] TestGraph/0.vertex_1 (4 ms)
[ RUN      ] TestGraph/0.vertex_2
[       OK ] TestGraph/0.vertex_2 (13 ms)
[ RUN      ] TestGraph/0.test_vertex
[       OK ] TestGraph/0.test_vertex (3 ms)
[ RUN      ] TestGraph/0.vertices_1
[       OK ] TestGraph/0.vertices_1 (7 ms)
[ RUN      ] TestGraph/0.vertices_2
[       OK ] TestGraph/0.vertices_2 (3 ms)
[ RUN      ] TestGraph/0.vertices_3
[       OK ] TestGraph/0.vertices_3 (5 ms)
[ RUN      ] TestGraph/0.vertices_4
[       OK ] TestGraph/0.vertices_4 (7 ms)
[ RUN      ] TestGraph/0.vertices_5
[       OK ] TestGraph/0.vertices_5 (10 ms)
[ RUN      ] TestGraph/0.test_vertices
[       OK ] TestGraph/0.test_vertices (4 ms)
[ RUN      ] TestGraph/0.add_edge_1
[       OK ] TestGraph/0.add_edge_1 (25 ms)
[ RUN      ] TestGraph/0.source_1
[       OK ] TestGraph/0.source_1 (3 ms)
[ RUN      ] TestGraph/0.source_2
[       OK ] TestGraph/0.source_2 (3 ms)
[ RUN      ] TestGraph/0.target_1
[       OK ] TestGraph/0.target_1 (3 ms)
[ RUN      ] TestGraph/0.target_2
[       OK ] TestGraph/0.target_2 (4 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_1
[       OK ] TestGraph/0.adjacent_vertices_1 (14 ms)
[ RUN      ] TestGraph/0.test_adjacent_vertices
[       OK ] TestGraph/0.test_adjacent_vertices (12 ms)
[ RUN      ] TestGraph/0.edge_1
[       OK ] TestGraph/0.edge_1 (13 ms)
[ RUN      ] TestGraph/0.add_edge_2
[       OK ] TestGraph/0.add_edge_2 (5 ms)
[ RUN      ] TestGraph/0.num_edges_1
[       OK ] TestGraph/0.num_edges_1 (8 ms)
[ RUN      ] TestGraph/0.edge_3
[       OK ] TestGraph/0.edge_3 (1379 ms)
[ RUN      ] TestGraph/0.add_edge_3
[       OK ] TestGraph/0.add_edge_3 (3 ms)
[ RUN      ] TestGraph/0.test_edge
[       OK ] TestGraph/0.test_edge (7 ms)
[ RUN      ] TestGraph/0.test_edges
[       OK ] TestGraph/0.test_edges (21 ms)
[----------] 25 tests from TestGraph/0 (1604 ms total)

[----------] 25 tests from TestGraph/1, where TypeParam = Graph
[ RUN      ] TestGraph/1.add_vertex_1
[       OK ] TestGraph/1.add_vertex_1 (38 ms)
[ RUN      ] TestGraph/1.num_vertex_1
[       OK ] TestGraph/1.num_vertex_1 (7 ms)
[ RUN      ] TestGraph/1.vertex_1
[       OK ] TestGraph/1.vertex_1 (6 ms)
[ RUN      ] TestGraph/1.vertex_2
[       OK ] TestGraph/1.vertex_2 (16 ms)
[ RUN      ] TestGraph/1.test_vertex
[       OK ] TestGraph/1.test_vertex (3 ms)
[ RUN      ] TestGraph/1.vertices_1
[       OK ] TestGraph/1.vertices_1 (6 ms)
[ RUN      ] TestGraph/1.vertices_2
[       OK ] TestGraph/1.vertices_2 (3 ms)
[ RUN      ] TestGraph/1.vertices_3
[       OK ] TestGraph/1.vertices_3 (8 ms)
[ RUN      ] TestGraph/1.vertices_4
[       OK ] TestGraph/1.vertices_4 (9 ms)
[ RUN      ] TestGraph/1.vertices_5
[       OK ] TestGraph/1.vertices_5 (16 ms)
[ RUN      ] TestGraph/1.test_vertices
[       OK ] TestGraph/1.test_vertices (5 ms)
[ RUN      ] TestGraph/1.add_edge_1
[       OK ] TestGraph/1.add_edge_1 (18 ms)
[ RUN      ] TestGraph/1.source_1
[       OK ] TestGraph/1.source_1 (3 ms)
[ RUN      ] TestGraph/1.source_2
[       OK ] TestGraph/1.source_2 (4 ms)
[ RUN      ] TestGraph/1.target_1
[       OK ] TestGraph/1.target_1 (3 ms)
[ RUN      ] TestGraph/1.target_2
[       OK ] TestGraph/1.target_2 (4 ms)
[ RUN      ] TestGraph/1.adjacent_vertices_1
[       OK ] TestGraph/1.adjacent_vertices_1 (3 ms)
[ RUN      ] TestGraph/1.test_adjacent_vertices
[       OK ] TestGraph/1.test_adjacent_vertices (9 ms)
[ RUN      ] TestGraph/1.edge_1
[       OK ] TestGraph/1.edge_1 (5 ms)
[ RUN      ] TestGraph/1.add_edge_2
[       OK ] TestGraph/1.add_edge_2 (4 ms)
[ RUN      ] TestGraph/1.num_edges_1
TestGraph.c++:545: Failure
Value of: es
  Actual: 1
Expected: 0
[  FAILED  ] TestGraph/1.num_edges_1, where TypeParam = Graph (30 ms)
[ RUN      ] TestGraph/1.edge_3
[       OK ] TestGraph/1.edge_3 (1601 ms)
[ RUN      ] TestGraph/1.add_edge_3
[       OK ] TestGraph/1.add_edge_3 (3 ms)
[ RUN      ] TestGraph/1.test_edge
[       OK ] TestGraph/1.test_edge (7 ms)
[ RUN      ] TestGraph/1.test_edges
==23018== Invalid read of size 8
==23018==    at 0x429F4A: TestGraph_test_edges_Test<Graph>::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x472B42: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465D1C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465DB3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465EB4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46612C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46640D: testing::UnitTest::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4050EF: main (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==  Address 0x614a8a8 is 8 bytes inside a block of size 32 free'd
==23018==    at 0x4C2C2BC: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23018==    by 0x41F6DF: __gnu_cxx::new_allocator<Graph::edge_descriptor>::deallocate(Graph::edge_descriptor*, unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x41DD99: std::_Vector_base<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::_M_deallocate(Graph::edge_descriptor*, unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4124E0: std::_Vector_base<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::~_Vector_base() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4079C8: std::vector<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::~vector() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x407086: edges(Graph const&) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x429E97: TestGraph_test_edges_Test<Graph>::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x472B42: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465D1C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465DB3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465EB4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46612C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018== 
==23018== Invalid read of size 8
==23018==    at 0x429F4E: TestGraph_test_edges_Test<Graph>::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x472B42: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465D1C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465DB3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465EB4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46612C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46640D: testing::UnitTest::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4050EF: main (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==  Address 0x614a8a0 is 0 bytes inside a block of size 32 free'd
==23018==    at 0x4C2C2BC: operator delete(void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==23018==    by 0x41F6DF: __gnu_cxx::new_allocator<Graph::edge_descriptor>::deallocate(Graph::edge_descriptor*, unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x41DD99: std::_Vector_base<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::_M_deallocate(Graph::edge_descriptor*, unsigned long) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4124E0: std::_Vector_base<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::~_Vector_base() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x4079C8: std::vector<Graph::edge_descriptor, std::allocator<Graph::edge_descriptor> >::~vector() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x407086: edges(Graph const&) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x429E97: TestGraph_test_edges_Test<Graph>::TestBody() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x472B42: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465D1C: testing::Test::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465DB3: testing::TestInfo::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x465EB4: testing::TestCase::Run() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018==    by 0x46612C: testing::internal::UnitTestImpl::RunAllTests() (in /v/filer4b/v38q001/epenning/CS_378/cs378-graph/TestGraph)
==23018== 
TestGraph.c++:685: Failure
Value of: ed
  Actual: 0
Expected: edAB
Which is: 1
[  FAILED  ] TestGraph/1.test_edges, where TypeParam = Graph (14 ms)
[----------] 25 tests from TestGraph/1 (1829 ms total)

[----------] Global test environment tear-down
[==========] 50 tests from 2 test cases ran. (3458 ms total)
[  PASSED  ] 48 tests.
[  FAILED  ] 2 tests, listed below:
[  FAILED  ] TestGraph/1.num_edges_1, where TypeParam = Graph
[  FAILED  ] TestGraph/1.test_edges, where TypeParam = Graph

 2 FAILED TESTS
==23018== 
==23018== HEAP SUMMARY:
==23018==     in use at exit: 0 bytes in 0 blocks
==23018==   total heap usage: 52,725 allocs, 52,725 frees, 1,346,904 bytes allocated
==23018== 
==23018== All heap blocks were freed -- no leaks are possible
==23018== 
==23018== For counts of detected and suppressed errors, rerun with: -v
==23018== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
