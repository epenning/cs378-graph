==7392== Memcheck, a memory error detector
==7392== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7392== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==7392== Command: ./TestGraph
==7392== 
Running main() from gtest_main.cc
[==========] Running 22 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 11 tests from TestGraph/0, where TypeParam = boost::adjacency_list<boost::setS, boost::vecS, boost::directedS, boost::no_property, boost::no_property, boost::no_property, boost::listS>
[ RUN      ] TestGraph/0.add_vertex_1
[       OK ] TestGraph/0.add_vertex_1 (36 ms)
[ RUN      ] TestGraph/0.num_vertex_1
[       OK ] TestGraph/0.num_vertex_1 (6 ms)
[ RUN      ] TestGraph/0.vertex_1
[       OK ] TestGraph/0.vertex_1 (4 ms)
[ RUN      ] TestGraph/0.vertex_2
[       OK ] TestGraph/0.vertex_2 (14 ms)
[ RUN      ] TestGraph/0.test_vertex
[       OK ] TestGraph/0.test_vertex (3 ms)
[ RUN      ] TestGraph/0.add_edge_1
[       OK ] TestGraph/0.add_edge_1 (26 ms)
[ RUN      ] TestGraph/0.add_edge_2
[       OK ] TestGraph/0.add_edge_2 (9 ms)
[ RUN      ] TestGraph/0.test_edge
[       OK ] TestGraph/0.test_edge (22 ms)
[ RUN      ] TestGraph/0.vertices_1
[       OK ] TestGraph/0.vertices_1 (4 ms)
[ RUN      ] TestGraph/0.vertices_2
[       OK ] TestGraph/0.vertices_2 (3 ms)
[ RUN      ] TestGraph/0.test_vertices
[       OK ] TestGraph/0.test_vertices (4 ms)
[----------] 11 tests from TestGraph/0 (140 ms total)

[----------] 11 tests from TestGraph/1, where TypeParam = Graph
[ RUN      ] TestGraph/1.add_vertex_1
[       OK ] TestGraph/1.add_vertex_1 (34 ms)
[ RUN      ] TestGraph/1.num_vertex_1
[       OK ] TestGraph/1.num_vertex_1 (6 ms)
[ RUN      ] TestGraph/1.vertex_1
[       OK ] TestGraph/1.vertex_1 (6 ms)
[ RUN      ] TestGraph/1.vertex_2
[       OK ] TestGraph/1.vertex_2 (16 ms)
[ RUN      ] TestGraph/1.test_vertex
[       OK ] TestGraph/1.test_vertex (3 ms)
[ RUN      ] TestGraph/1.add_edge_1
[       OK ] TestGraph/1.add_edge_1 (5 ms)
[ RUN      ] TestGraph/1.add_edge_2
TestGraph.c++:193: Failure
Expected: (success1) != (success2), actual: true vs true
[  FAILED  ] TestGraph/1.add_edge_2, where TypeParam = Graph (33 ms)
[ RUN      ] TestGraph/1.test_edge
TestGraph.c++:216: Failure
Value of: p1.second
  Actual: true
Expected: false
[  FAILED  ] TestGraph/1.test_edge, where TypeParam = Graph (9 ms)
[ RUN      ] TestGraph/1.vertices_1
[       OK ] TestGraph/1.vertices_1 (7 ms)
[ RUN      ] TestGraph/1.vertices_2
[       OK ] TestGraph/1.vertices_2 (3 ms)
[ RUN      ] TestGraph/1.test_vertices
[       OK ] TestGraph/1.test_vertices (5 ms)
[----------] 11 tests from TestGraph/1 (129 ms total)

[----------] Global test environment tear-down
[==========] 22 tests from 2 test cases ran. (295 ms total)
[  PASSED  ] 20 tests.
[  FAILED  ] 2 tests, listed below:
[  FAILED  ] TestGraph/1.add_edge_2, where TypeParam = Graph
[  FAILED  ] TestGraph/1.test_edge, where TypeParam = Graph

 2 FAILED TESTS
==7392== 
==7392== HEAP SUMMARY:
==7392==     in use at exit: 0 bytes in 0 blocks
==7392==   total heap usage: 1,033 allocs, 1,033 frees, 225,463 bytes allocated
==7392== 
==7392== All heap blocks were freed -- no leaks are possible
==7392== 
==7392== For counts of detected and suppressed errors, rerun with: -v
==7392== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
