==23655== Memcheck, a memory error detector
==23655== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==23655== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==23655== Command: ./TestGraph
==23655== 
Running main() from gtest_main.cc
[==========] Running 10 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from TestGraph/0, where TypeParam = boost::adjacency_list<boost::setS, boost::vecS, boost::directedS, boost::no_property, boost::no_property, boost::no_property, boost::listS>
[ RUN      ] TestGraph/0.test_vertex
[       OK ] TestGraph/0.test_vertex (31 ms)
[ RUN      ] TestGraph/0.test_edge
[       OK ] TestGraph/0.test_edge (52 ms)
[ RUN      ] TestGraph/0.test_vertices
[       OK ] TestGraph/0.test_vertices (5 ms)
[ RUN      ] TestGraph/0.test_edges
[       OK ] TestGraph/0.test_edges (29 ms)
[ RUN      ] TestGraph/0.test_adjacent_vertices
[       OK ] TestGraph/0.test_adjacent_vertices (14 ms)
[----------] 5 tests from TestGraph/0 (138 ms total)

[----------] 5 tests from TestGraph/1, where TypeParam = Graph
[ RUN      ] TestGraph/1.test_vertex
[       OK ] TestGraph/1.test_vertex (7 ms)
[ RUN      ] TestGraph/1.test_edge
[       OK ] TestGraph/1.test_edge (7 ms)
[ RUN      ] TestGraph/1.test_vertices
[       OK ] TestGraph/1.test_vertices (5 ms)
[ RUN      ] TestGraph/1.test_edges
[       OK ] TestGraph/1.test_edges (5 ms)
[ RUN      ] TestGraph/1.test_adjacent_vertices
[       OK ] TestGraph/1.test_adjacent_vertices (4 ms)
[----------] 5 tests from TestGraph/1 (28 ms total)

[----------] Global test environment tear-down
[==========] 10 tests from 2 test cases ran. (189 ms total)
[  PASSED  ] 10 tests.
==23655== 
==23655== HEAP SUMMARY:
==23655==     in use at exit: 0 bytes in 0 blocks
==23655==   total heap usage: 528 allocs, 528 frees, 78,064 bytes allocated
==23655== 
==23655== All heap blocks were freed -- no leaks are possible
==23655== 
==23655== For counts of detected and suppressed errors, rerun with: -v
==23655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestGraph.c++'
Lines executed:100.00% of 79
Branches executed:58.14% of 688
Taken at least once:29.07% of 688
Calls executed:41.75% of 606
Creating 'TestGraph.c++.gcov'

File 'Graph.h'
Lines executed:100.00% of 43
Branches executed:100.00% of 2
Taken at least once:50.00% of 2
Calls executed:88.89% of 9
Creating 'Graph.h.gcov'

