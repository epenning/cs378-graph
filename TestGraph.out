==12157== Memcheck, a memory error detector
==12157== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==12157== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==12157== Command: ./TestGraph
==12157== 
Running main() from gtest_main.cc
[==========] Running 72 tests from 2 test cases.
[----------] Global test environment set-up.
[----------] 36 tests from TestGraph/0, where TypeParam = boost::adjacency_list<boost::setS, boost::vecS, boost::directedS, boost::no_property, boost::no_property, boost::no_property, boost::listS>
[ RUN      ] TestGraph/0.add_vertex_1
[       OK ] TestGraph/0.add_vertex_1 (34 ms)
[ RUN      ] TestGraph/0.num_vertex_1
[       OK ] TestGraph/0.num_vertex_1 (6 ms)
[ RUN      ] TestGraph/0.vertex_1
[       OK ] TestGraph/0.vertex_1 (3 ms)
[ RUN      ] TestGraph/0.vertex_2
[       OK ] TestGraph/0.vertex_2 (13 ms)
[ RUN      ] TestGraph/0.test_vertex
[       OK ] TestGraph/0.test_vertex (2 ms)
[ RUN      ] TestGraph/0.vertices_1
[       OK ] TestGraph/0.vertices_1 (6 ms)
[ RUN      ] TestGraph/0.vertices_2
[       OK ] TestGraph/0.vertices_2 (4 ms)
[ RUN      ] TestGraph/0.vertices_3
[       OK ] TestGraph/0.vertices_3 (5 ms)
[ RUN      ] TestGraph/0.vertices_4
[       OK ] TestGraph/0.vertices_4 (7 ms)
[ RUN      ] TestGraph/0.vertices_5
[       OK ] TestGraph/0.vertices_5 (9 ms)
[ RUN      ] TestGraph/0.test_vertices
[       OK ] TestGraph/0.test_vertices (4 ms)
[ RUN      ] TestGraph/0.add_edge_1
[       OK ] TestGraph/0.add_edge_1 (25 ms)
[ RUN      ] TestGraph/0.source_1
[       OK ] TestGraph/0.source_1 (3 ms)
[ RUN      ] TestGraph/0.source_2
[       OK ] TestGraph/0.source_2 (4 ms)
[ RUN      ] TestGraph/0.target_1
[       OK ] TestGraph/0.target_1 (2 ms)
[ RUN      ] TestGraph/0.target_2
[       OK ] TestGraph/0.target_2 (4 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_1
[       OK ] TestGraph/0.adjacent_vertices_1 (14 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_2
[       OK ] TestGraph/0.adjacent_vertices_2 (8 ms)
[ RUN      ] TestGraph/0.adjacent_vertices_3
[       OK ] TestGraph/0.adjacent_vertices_3 (5034 ms)
[ RUN      ] TestGraph/0.test_adjacent_vertices
[       OK ] TestGraph/0.test_adjacent_vertices (5 ms)
[ RUN      ] TestGraph/0.edge_1
[       OK ] TestGraph/0.edge_1 (5 ms)
[ RUN      ] TestGraph/0.add_edge_2
[       OK ] TestGraph/0.add_edge_2 (4 ms)
[ RUN      ] TestGraph/0.num_edges_1
[       OK ] TestGraph/0.num_edges_1 (8 ms)
[ RUN      ] TestGraph/0.edge_3
[       OK ] TestGraph/0.edge_3 (1373 ms)
[ RUN      ] TestGraph/0.num_edges_2
[       OK ] TestGraph/0.num_edges_2 (835 ms)
[ RUN      ] TestGraph/0.num_edges_3
[       OK ] TestGraph/0.num_edges_3 (1555 ms)
[ RUN      ] TestGraph/0.add_edge_3
[       OK ] TestGraph/0.add_edge_3 (4 ms)
[ RUN      ] TestGraph/0.add_edge_4
[       OK ] TestGraph/0.add_edge_4 (3 ms)
[ RUN      ] TestGraph/0.add_edge_5
[       OK ] TestGraph/0.add_edge_5 (3 ms)
[ RUN      ] TestGraph/0.add_edge_6
[       OK ] TestGraph/0.add_edge_6 (2 ms)
[ RUN      ] TestGraph/0.edge_4
[       OK ] TestGraph/0.edge_4 (2917 ms)
[ RUN      ] TestGraph/0.test_edge
[       OK ] TestGraph/0.test_edge (6 ms)
[ RUN      ] TestGraph/0.edges_1
[       OK ] TestGraph/0.edges_1 (17 ms)
[ RUN      ] TestGraph/0.edges_2
[       OK ] TestGraph/0.edges_2 (8 ms)
[ RUN      ] TestGraph/0.edges_3
[       OK ] TestGraph/0.edges_3 (2857 ms)
[ RUN      ] TestGraph/0.test_edges
[       OK ] TestGraph/0.test_edges (6 ms)
[----------] 36 tests from TestGraph/0 (14805 ms total)

[----------] 36 tests from TestGraph/1, where TypeParam = Graph
[ RUN      ] TestGraph/1.add_vertex_1
[       OK ] TestGraph/1.add_vertex_1 (38 ms)
[ RUN      ] TestGraph/1.num_vertex_1
[       OK ] TestGraph/1.num_vertex_1 (5 ms)
[ RUN      ] TestGraph/1.vertex_1
[       OK ] TestGraph/1.vertex_1 (5 ms)
[ RUN      ] TestGraph/1.vertex_2
[       OK ] TestGraph/1.vertex_2 (16 ms)
[ RUN      ] TestGraph/1.test_vertex
[       OK ] TestGraph/1.test_vertex (3 ms)
[ RUN      ] TestGraph/1.vertices_1
[       OK ] TestGraph/1.vertices_1 (6 ms)
[ RUN      ] TestGraph/1.vertices_2
[       OK ] TestGraph/1.vertices_2 (3 ms)
[ RUN      ] TestGraph/1.vertices_3
[       OK ] TestGraph/1.vertices_3 (6 ms)
[ RUN      ] TestGraph/1.vertices_4
[       OK ] TestGraph/1.vertices_4 (7 ms)
[ RUN      ] TestGraph/1.vertices_5
[       OK ] TestGraph/1.vertices_5 (14 ms)
[ RUN      ] TestGraph/1.test_vertices
[       OK ] TestGraph/1.test_vertices (5 ms)
[ RUN      ] TestGraph/1.add_edge_1
[       OK ] TestGraph/1.add_edge_1 (21 ms)
[ RUN      ] TestGraph/1.source_1
[       OK ] TestGraph/1.source_1 (3 ms)
[ RUN      ] TestGraph/1.source_2
[       OK ] TestGraph/1.source_2 (7 ms)
[ RUN      ] TestGraph/1.target_1
[       OK ] TestGraph/1.target_1 (2 ms)
[ RUN      ] TestGraph/1.target_2
[       OK ] TestGraph/1.target_2 (3 ms)
[ RUN      ] TestGraph/1.adjacent_vertices_1
[       OK ] TestGraph/1.adjacent_vertices_1 (4 ms)
[ RUN      ] TestGraph/1.adjacent_vertices_2
[       OK ] TestGraph/1.adjacent_vertices_2 (3 ms)
[ RUN      ] TestGraph/1.adjacent_vertices_3
[       OK ] TestGraph/1.adjacent_vertices_3 (2262 ms)
[ RUN      ] TestGraph/1.test_adjacent_vertices
[       OK ] TestGraph/1.test_adjacent_vertices (5 ms)
[ RUN      ] TestGraph/1.edge_1
[       OK ] TestGraph/1.edge_1 (5 ms)
[ RUN      ] TestGraph/1.add_edge_2
[       OK ] TestGraph/1.add_edge_2 (4 ms)
[ RUN      ] TestGraph/1.num_edges_1
[       OK ] TestGraph/1.num_edges_1 (4 ms)
[ RUN      ] TestGraph/1.edge_3
[       OK ] TestGraph/1.edge_3 (2413 ms)
[ RUN      ] TestGraph/1.num_edges_2
[       OK ] TestGraph/1.num_edges_2 (1517 ms)
[ RUN      ] TestGraph/1.num_edges_3
[       OK ] TestGraph/1.num_edges_3 (2420 ms)
[ RUN      ] TestGraph/1.add_edge_3
[       OK ] TestGraph/1.add_edge_3 (4 ms)
[ RUN      ] TestGraph/1.add_edge_4
[       OK ] TestGraph/1.add_edge_4 (4 ms)
[ RUN      ] TestGraph/1.add_edge_5
[       OK ] TestGraph/1.add_edge_5 (3 ms)
[ RUN      ] TestGraph/1.add_edge_6
[       OK ] TestGraph/1.add_edge_6 (2 ms)
[ RUN      ] TestGraph/1.edge_4
[       OK ] TestGraph/1.edge_4 (2487 ms)
[ RUN      ] TestGraph/1.test_edge
[       OK ] TestGraph/1.test_edge (6 ms)
[ RUN      ] TestGraph/1.edges_1
[       OK ] TestGraph/1.edges_1 (4 ms)
[ RUN      ] TestGraph/1.edges_2
[       OK ] TestGraph/1.edges_2 (3 ms)
[ RUN      ] TestGraph/1.edges_3
[       OK ] TestGraph/1.edges_3 (2044 ms)
[ RUN      ] TestGraph/1.test_edges
[       OK ] TestGraph/1.test_edges (5 ms)
[----------] 36 tests from TestGraph/1 (13351 ms total)

[----------] Global test environment tear-down
[==========] 72 tests from 2 test cases ran. (28180 ms total)
[  PASSED  ] 72 tests.
==12157== 
==12157== HEAP SUMMARY:
==12157==     in use at exit: 0 bytes in 0 blocks
==12157==   total heap usage: 362,580 allocs, 362,580 frees, 9,498,364 bytes allocated
==12157== 
==12157== All heap blocks were freed -- no leaks are possible
==12157== 
==12157== For counts of detected and suppressed errors, rerun with: -v
==12157== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestGraph.c++'
Lines executed:100.00% of 442
Branches executed:62.46% of 3708
Taken at least once:33.44% of 3708
Calls executed:44.76% of 3188
Creating 'TestGraph.c++.gcov'

File 'Graph.h'
Lines executed:100.00% of 78
Branches executed:100.00% of 50
Taken at least once:66.00% of 50
Calls executed:85.71% of 63
Creating 'Graph.h.gcov'

